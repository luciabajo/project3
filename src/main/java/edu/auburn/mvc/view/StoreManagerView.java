package edu.auburn.mvc.view;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import com.intellij.uiDesigner.core.*;

public class StoreManagerView extends JFrame {

    // Members variables to be shared in the Controller scope.
    public JTextField priceText;
    public JTextField quantityText;
    public JTextField productIdText;
    public JTextField nameText;
    public JTextField purchaseIdText;
    public JTextField purchaseProductIdText;
    public JTextField purchaseCustomerIdText;
    public JTextField purchaseQuantityText;
    public JTextField customerIdText;
    public JTextField customerNameText;
    public JTextField zipCodeText;
    public JTextField phoneText;
    public JTextField userCustomerIdText;
    public JTextField userUserTypeText;
    public JTextField userFullNameText;
    public JTextField userPasswordText;
    public JTextField userUserNameText;
    public JTextField userUserIdText;

    public JPanel productPanel;
    public JPanel panelMain;
    public JPanel productIdPanel;
    public JPanel namePanel;
    public JPanel customerPanel;
    public JPanel purchasePanel;
    public JPanel customerIdPanel;
    public JPanel customerNamePanel;
    public JPanel zipCodePanel;
    public JPanel phonePanel;
    public JPanel purchaseIdPanel;
    public JPanel purchaseProductIdPanel;
    public JPanel purchaseCustomerIdPanel;
    public JPanel purchaseQuantityPanel;
    public JPanel userPanel;

    public JButton btnCancel;
    public JButton btnAdd;
    public JButton addCustomerButton;
    public JButton addPurchaseButton;
    public JButton addUserButton;

    public JButton updateProductButton;
    public JButton updateCustomerButton;
    public JButton updatePurchaseButton;
    public JButton updateUserButton;

    public JButton loadPurchaseButton;
    public JButton loadCustomerButton;
    public JButton loadProductButton;
    public JButton loadUserButton;

    public JLabel priceLabel;
    public JLabel quantityLabel;
    public JLabel productIdLabel;
    public JLabel nameLabel;
    public JLabel customerIdLabel;
    public JLabel firstLastNamesLabel;
    public JLabel zipCodeLabel;
    public JLabel phoneLabel;
    public JLabel userIdLabel;
    public JLabel userNameLabel;
    public JLabel passwordLabel;
    public JLabel fullNameLabel;
    public JLabel userTypeLabel;
    public JLabel userCustomerIdLabel;
    public JLabel purchaseIdLabel;
    public JLabel purchaseProductIdLabel;
    public JLabel purchaseCustomerIDLabel;
    public JLabel purchaseQuantityLabel;


    public StoreManagerView() {

    }

    public StoreManagerView(String loginInfo) {
        String role = loginInfo.substring(loginInfo.indexOf(" is ") + " is ".length());

        this.setTitle("Store Manager - " + loginInfo);
        this.setSize(1100, 400);
        panelMain = new JPanel();
        panelMain.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 4, new Insets(0, 0, 0, 0), -1, -1));
        productPanel = new JPanel();
        productPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(productPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        productPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Product Panel", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, getFont(null, Font.BOLD, -1, productPanel.getFont())));
        productIdPanel = new JPanel();
        productIdPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        productPanel.add(productIdPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        productIdLabel = new JLabel();
        productIdLabel.setHorizontalAlignment(2);
        productIdLabel.setText("Product ID:");
        productIdPanel.add(productIdLabel);
        productIdText = new JTextField();
        productIdText.setColumns(10);
        productIdText.setHorizontalAlignment(2);
        productIdPanel.add(productIdText);
        namePanel = new JPanel();
        namePanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        productPanel.add(namePanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        nameLabel = new JLabel();
        nameLabel.setHorizontalAlignment(2);
        nameLabel.setText("Name:");
        namePanel.add(nameLabel);
        nameText = new JTextField();
        nameText.setColumns(10);
        nameText.setHorizontalAlignment(2);
        namePanel.add(nameText);
        btnAdd = new JButton();
        btnAdd.setText("Add");
        productPanel.add(btnAdd, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        productPanel.add(panel1, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        priceLabel = new JLabel();
        priceLabel.setHorizontalAlignment(2);
        priceLabel.setText("Price:");
        panel1.add(priceLabel);
        priceText = new JTextField();
        priceText.setColumns(10);
        priceText.setHorizontalAlignment(2);
        panel1.add(priceText);
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        productPanel.add(panel2, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        quantityLabel = new JLabel();
        quantityLabel.setHorizontalAlignment(2);
        quantityLabel.setText("Quantity:");
        panel2.add(quantityLabel);
        quantityText = new JTextField();
        quantityText.setColumns(10);
        quantityText.setHorizontalAlignment(2);
        panel2.add(quantityText);
        updateProductButton = new JButton();
        updateProductButton.setText("Update");
        productPanel.add(updateProductButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loadProductButton = new JButton();
        loadProductButton.setText("Load");
        productPanel.add(loadProductButton, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        btnCancel = new JButton();
        btnCancel.setText("Exit Store Manager");
        panelMain.add(btnCancel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        customerPanel = new JPanel();
        customerPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(customerPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        customerPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Customer Panel", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, getFont(null, Font.BOLD, -1, customerPanel.getFont())));
        customerIdPanel = new JPanel();
        customerIdPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        customerPanel.add(customerIdPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        customerIdLabel = new JLabel();
        customerIdLabel.setHorizontalAlignment(2);
        customerIdLabel.setText("Customer ID:");
        customerIdPanel.add(customerIdLabel);
        customerIdText = new JTextField();
        customerIdText.setColumns(10);
        customerIdText.setHorizontalAlignment(2);
        customerIdPanel.add(customerIdText);
        customerNamePanel = new JPanel();
        customerNamePanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        customerPanel.add(customerNamePanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        firstLastNamesLabel = new JLabel();
        firstLastNamesLabel.setHorizontalAlignment(2);
        firstLastNamesLabel.setText("First and Last Names:");
        customerNamePanel.add(firstLastNamesLabel);
        customerNameText = new JTextField();
        customerNameText.setColumns(10);
        customerNameText.setHorizontalAlignment(2);
        customerNamePanel.add(customerNameText);
        addCustomerButton = new JButton();
        addCustomerButton.setText("Add");
        customerPanel.add(addCustomerButton, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        zipCodePanel = new JPanel();
        zipCodePanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        customerPanel.add(zipCodePanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        zipCodeLabel = new JLabel();
        zipCodeLabel.setHorizontalAlignment(2);
        zipCodeLabel.setText("Zip Code:");
        zipCodePanel.add(zipCodeLabel);
        zipCodeText = new JTextField();
        zipCodeText.setColumns(10);
        zipCodeText.setHorizontalAlignment(2);
        zipCodePanel.add(zipCodeText);
        phonePanel = new JPanel();
        phonePanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        customerPanel.add(phonePanel, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 4, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        phoneLabel = new JLabel();
        phoneLabel.setHorizontalAlignment(2);
        phoneLabel.setText("Phone:");
        phonePanel.add(phoneLabel);
        phoneText = new JTextField();
        phoneText.setColumns(10);
        phoneText.setHorizontalAlignment(2);
        phonePanel.add(phoneText);
        updateCustomerButton = new JButton();
        updateCustomerButton.setText("Update");
        customerPanel.add(updateCustomerButton, new com.intellij.uiDesigner.core.GridConstraints(4, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loadCustomerButton = new JButton();
        loadCustomerButton.setText("Load");
        customerPanel.add(loadCustomerButton, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        purchasePanel = new JPanel();
        purchasePanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(5, 5, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(purchasePanel, new com.intellij.uiDesigner.core.GridConstraints(0, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        purchasePanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "Purchase Panel", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, getFont(null, Font.BOLD, -1, purchasePanel.getFont())));
        purchaseIdPanel = new JPanel();
        purchaseIdPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        purchasePanel.add(purchaseIdPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        purchaseIdLabel = new JLabel();
        purchaseIdLabel.setHorizontalAlignment(2);
        purchaseIdLabel.setText("Purchase ID:");
        purchaseIdPanel.add(purchaseIdLabel);
        purchaseIdText = new JTextField();
        purchaseIdText.setColumns(10);
        purchaseIdText.setHorizontalAlignment(2);
        purchaseIdPanel.add(purchaseIdText);
        purchaseProductIdPanel = new JPanel();
        purchaseProductIdPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        purchasePanel.add(purchaseProductIdPanel, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        purchaseProductIdLabel = new JLabel();
        purchaseProductIdLabel.setHorizontalAlignment(2);
        purchaseProductIdLabel.setText("Product ID:");
        purchaseProductIdPanel.add(purchaseProductIdLabel);
        purchaseProductIdText = new JTextField();
        purchaseProductIdText.setColumns(10);
        purchaseProductIdText.setHorizontalAlignment(2);
        purchaseProductIdPanel.add(purchaseProductIdText);
        addPurchaseButton = new JButton();
        addPurchaseButton.setText("Add");
        purchasePanel.add(addPurchaseButton, new com.intellij.uiDesigner.core.GridConstraints(4, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        purchaseCustomerIdPanel = new JPanel();
        purchaseCustomerIdPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        purchasePanel.add(purchaseCustomerIdPanel, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        purchaseCustomerIDLabel = new JLabel();
        purchaseCustomerIDLabel.setHorizontalAlignment(2);
        purchaseCustomerIDLabel.setText("Customer ID:");
        purchaseCustomerIdPanel.add(purchaseCustomerIDLabel);
        purchaseCustomerIdText = new JTextField();
        purchaseCustomerIdText.setColumns(10);
        purchaseCustomerIdText.setHorizontalAlignment(2);
        purchaseCustomerIdPanel.add(purchaseCustomerIdText);
        purchaseQuantityPanel = new JPanel();
        purchaseQuantityPanel.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        purchasePanel.add(purchaseQuantityPanel, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        purchaseQuantityLabel = new JLabel();
        purchaseQuantityLabel.setHorizontalAlignment(2);
        purchaseQuantityLabel.setText("Quantity:");
        purchaseQuantityPanel.add(purchaseQuantityLabel);
        purchaseQuantityText = new JTextField();
        purchaseQuantityText.setColumns(10);
        purchaseQuantityText.setHorizontalAlignment(2);
        purchaseQuantityPanel.add(purchaseQuantityText);
        updatePurchaseButton = new JButton();
        updatePurchaseButton.setHorizontalAlignment(0);
        updatePurchaseButton.setText("Update");
        purchasePanel.add(updatePurchaseButton, new com.intellij.uiDesigner.core.GridConstraints(4, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loadPurchaseButton = new JButton();
        loadPurchaseButton.setText("Load");
        purchasePanel.add(loadPurchaseButton, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        userPanel = new JPanel();
        userPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(7, 5, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(userPanel, new com.intellij.uiDesigner.core.GridConstraints(0, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        userPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createEtchedBorder(), "User Panel", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, getFont(null, Font.BOLD, -1, userPanel.getFont())));
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        userPanel.add(panel3, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        userIdLabel = new JLabel();
        userIdLabel.setHorizontalAlignment(2);
        userIdLabel.setText("User ID:");
        panel3.add(userIdLabel);
        userUserIdText = new JTextField();
        userUserIdText.setColumns(10);
        userUserIdText.setHorizontalAlignment(2);
        panel3.add(userUserIdText);
        final JPanel panel4 = new JPanel();
        panel4.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        userPanel.add(panel4, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        userNameLabel = new JLabel();
        userNameLabel.setHorizontalAlignment(2);
        userNameLabel.setText("User Name:");
        panel4.add(userNameLabel);
        userUserNameText = new JTextField();
        userUserNameText.setColumns(10);
        userUserNameText.setHorizontalAlignment(2);
        userUserNameText.setText("");
        panel4.add(userUserNameText);
        addUserButton = new JButton();
        addUserButton.setText("Add");
        userPanel.add(addUserButton, new com.intellij.uiDesigner.core.GridConstraints(6, 4, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_EAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel5 = new JPanel();
        panel5.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        userPanel.add(panel5, new com.intellij.uiDesigner.core.GridConstraints(2, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        passwordLabel = new JLabel();
        passwordLabel.setHorizontalAlignment(2);
        passwordLabel.setText("Password:");
        panel5.add(passwordLabel);
        userPasswordText = new JTextField();
        userPasswordText.setColumns(10);
        userPasswordText.setHorizontalAlignment(2);
        panel5.add(userPasswordText);
        final JPanel panel6 = new JPanel();
        panel6.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        userPanel.add(panel6, new com.intellij.uiDesigner.core.GridConstraints(5, 0, 1, 5, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        userCustomerIdLabel = new JLabel();
        userCustomerIdLabel.setHorizontalAlignment(2);
        userCustomerIdLabel.setText("Customer ID:");
        panel6.add(userCustomerIdLabel);
        userCustomerIdText = new JTextField();
        userCustomerIdText.setColumns(10);
        userCustomerIdText.setHorizontalAlignment(2);
        panel6.add(userCustomerIdText);
        updateUserButton = new JButton();
        updateUserButton.setHorizontalAlignment(0);
        updateUserButton.setText("Update");
        userPanel.add(updateUserButton, new com.intellij.uiDesigner.core.GridConstraints(6, 2, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loadUserButton = new JButton();
        loadUserButton.setText("Load");
        userPanel.add(loadUserButton, new com.intellij.uiDesigner.core.GridConstraints(6, 3, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel7 = new JPanel();
        panel7.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        userPanel.add(panel7, new com.intellij.uiDesigner.core.GridConstraints(3, 3, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        fullNameLabel = new JLabel();
        fullNameLabel.setHorizontalAlignment(2);
        fullNameLabel.setText("Full Name:");
        panel7.add(fullNameLabel);
        userFullNameText = new JTextField();
        userFullNameText.setColumns(10);
        userFullNameText.setHorizontalAlignment(2);
        panel7.add(userFullNameText);
        final JPanel panel8 = new JPanel();
        panel8.setLayout(new FlowLayout(FlowLayout.RIGHT, 5, 5));
        userPanel.add(panel8, new com.intellij.uiDesigner.core.GridConstraints(4, 3, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_NORTHEAST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        userTypeLabel = new JLabel();
        userTypeLabel.setHorizontalAlignment(2);
        userTypeLabel.setText("User Type:");
        panel8.add(userTypeLabel);
        userUserTypeText = new JTextField();
        userUserTypeText.setColumns(10);
        userUserTypeText.setHorizontalAlignment(2);
        panel8.add(userUserTypeText);

        if (role.equalsIgnoreCase("ADMIN")) {
            productPanel.setEnabled(false);
            productIdText.setEnabled(false);
            nameText.setEnabled(false);
            priceText.setEnabled(false);
            quantityText.setEnabled(false);
            productIdLabel.setEnabled(false);
            nameLabel.setEnabled(false);
            priceLabel.setEnabled(false);
            quantityLabel.setEnabled(false);
            btnAdd.setEnabled(false);
            updateProductButton.setEnabled(false);
            loadProductButton.setEnabled(false);

            customerPanel.setEnabled(false);
            customerIdText.setEnabled(false);
            customerNameText.setEnabled(false);
            zipCodeText.setEnabled(false);
            phoneText.setEnabled(false);
            customerIdLabel.setEnabled(false);
            firstLastNamesLabel.setEnabled(false);
            zipCodeLabel.setEnabled(false);
            phoneLabel.setEnabled(false);
            addCustomerButton.setEnabled(false);
            updateCustomerButton.setEnabled(false);
            loadCustomerButton.setEnabled(false);

            purchasePanel.setEnabled(false);
            purchaseIdText.setEnabled(false);
            purchaseProductIdText.setEnabled(false);
            purchaseCustomerIdText.setEnabled(false);
            purchaseQuantityText.setEnabled(false);
            purchaseIdLabel.setEnabled(false);
            purchaseProductIdLabel.setEnabled(false);
            purchaseCustomerIDLabel.setEnabled(false);
            purchaseQuantityLabel.setEnabled(false);
            addPurchaseButton.setEnabled(false);
            updatePurchaseButton.setEnabled(false);
            loadPurchaseButton.setEnabled(false);
        }

        if (role.equalsIgnoreCase("MANAGER")) {
            customerPanel.setEnabled(false);
            customerIdText.setEnabled(false);
            customerNameText.setEnabled(false);
            zipCodeText.setEnabled(false);
            phoneText.setEnabled(false);
            customerIdLabel.setEnabled(false);
            firstLastNamesLabel.setEnabled(false);
            zipCodeLabel.setEnabled(false);
            phoneLabel.setEnabled(false);
            addCustomerButton.setEnabled(false);
            updateCustomerButton.setEnabled(false);
            loadCustomerButton.setEnabled(false);

            purchasePanel.setEnabled(false);
            purchaseIdText.setEnabled(false);
            purchaseProductIdText.setEnabled(false);
            purchaseCustomerIdText.setEnabled(false);
            purchaseQuantityText.setEnabled(false);
            purchaseIdLabel.setEnabled(false);
            purchaseProductIdLabel.setEnabled(false);
            purchaseCustomerIDLabel.setEnabled(false);
            purchaseQuantityLabel.setEnabled(false);
            addPurchaseButton.setEnabled(false);
            updatePurchaseButton.setEnabled(false);
            loadPurchaseButton.setEnabled(false);

            userCustomerIdText.setEnabled(false);
            userUserTypeText.setEnabled(false);
            userUserNameText.setEnabled(false);
            userUserIdText.setEnabled(false);
            userIdLabel.setEnabled(false);
            userNameLabel.setEnabled(false);
            userFullNameText.setEnabled(false);
            passwordLabel.setEnabled(false);
            userPasswordText.setEnabled(false);
            fullNameLabel.setEnabled(false);
            userTypeLabel.setEnabled(false);
            userCustomerIdLabel.setEnabled(false);
            addUserButton.setEnabled(false);
            updateUserButton.setEnabled(false);
            loadUserButton.setEnabled(false);
        }

        if (role.equalsIgnoreCase("CASHIER")) {
            purchasePanel.setEnabled(false);
            purchaseIdText.setEnabled(false);
            purchaseProductIdText.setEnabled(false);
            purchaseCustomerIdText.setEnabled(false);
            purchaseQuantityText.setEnabled(false);
            purchaseIdLabel.setEnabled(false);
            purchaseProductIdLabel.setEnabled(false);
            purchaseCustomerIDLabel.setEnabled(false);
            purchaseQuantityLabel.setEnabled(false);
            addPurchaseButton.setEnabled(false);
            updatePurchaseButton.setEnabled(false);
            loadPurchaseButton.setEnabled(false);

            userCustomerIdText.setEnabled(false);
            userUserTypeText.setEnabled(false);
            userUserNameText.setEnabled(false);
            userUserIdText.setEnabled(false);
            userIdLabel.setEnabled(false);
            userNameLabel.setEnabled(false);
            userFullNameText.setEnabled(false);
            passwordLabel.setEnabled(false);
            userPasswordText.setEnabled(false);
            fullNameLabel.setEnabled(false);
            userTypeLabel.setEnabled(false);
            userCustomerIdLabel.setEnabled(false);
            addUserButton.setEnabled(false);
            updateUserButton.setEnabled(false);
            loadUserButton.setEnabled(false);
        }

        if (role.equalsIgnoreCase("CUSTOMER")) {
            productPanel.setEnabled(false);
            productIdText.setEnabled(false);
            nameText.setEnabled(false);
            priceText.setEnabled(false);
            quantityText.setEnabled(false);
            productIdLabel.setEnabled(false);
            nameLabel.setEnabled(false);
            priceLabel.setEnabled(false);
            quantityLabel.setEnabled(false);
            btnAdd.setEnabled(false);
            updateProductButton.setEnabled(false);
            loadProductButton.setEnabled(false);

            customerPanel.setEnabled(false);
            customerIdText.setEnabled(false);
            customerNameText.setEnabled(false);
            zipCodeText.setEnabled(false);
            phoneText.setEnabled(false);
            customerIdLabel.setEnabled(false);
            firstLastNamesLabel.setEnabled(false);
            zipCodeLabel.setEnabled(false);
            phoneLabel.setEnabled(false);
            addCustomerButton.setEnabled(false);
            updateCustomerButton.setEnabled(false);
            loadCustomerButton.setEnabled(false);

            userCustomerIdText.setEnabled(false);
            userUserTypeText.setEnabled(false);
            userUserNameText.setEnabled(false);
            userUserIdText.setEnabled(false);
            userIdLabel.setEnabled(false);
            userNameLabel.setEnabled(false);
            userFullNameText.setEnabled(false);
            passwordLabel.setEnabled(false);
            userPasswordText.setEnabled(false);
            fullNameLabel.setEnabled(false);
            userTypeLabel.setEnabled(false);
            userCustomerIdLabel.setEnabled(false);
            addUserButton.setEnabled(false);
            updateUserButton.setEnabled(false);
            loadUserButton.setEnabled(false);
        }

        this.setContentPane(panelMain);
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
    }

    public Font getFont(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }
}
